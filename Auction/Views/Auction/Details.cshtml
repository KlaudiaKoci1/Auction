@model Auction.Models.AuctionProductModel

@{
    ViewData["Title"] = "Details";
}


<body>
    <div>
        <div class="container">
            <form asp-action="Details" id="formDetails">

                <input type="hidden" asp-for="@Model.Id" />
                <div class="row" style="margin-left:30%">
                    <div class="col-md-8">
                        <h4 class="d-flex justify-content-between align-items-center">
                            <span class="text-dark">@Html.DisplayFor(model => model.ProductName)</span>
                            <span class="badge text-dark">@Html.DisplayFor(model => model.ApplicantName)</span>
                        </h4>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between lh-sm">
                                <div>
                                    <h6 class="my-0">Description</h6>
                                    <small class="text-muted">@Html.DisplayFor(model => model.Description)</small>
                                </div>

                            </li>

                        </ul>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between lh-sm">
                                <div>
                                    <h6 class="my-0">Time Remaning</h6>
                                    @if (Model.EndDate >= DateTime.Today)
                                    {
                                        var diffOfDates = Model.EndDate - DateTime.Today;
                                        var days = diffOfDates.Days;
                                        <div> </div>
                                        <small class="text-muted">@days Days</small>
                                    }

                                </div>

                            </li>

                        </ul>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between lh-sm">
                                <div>
                                    <h6 class="my-0">Current Hight Bid</h6>
                                    <small id="currentbid" class="text-muted">$@Html.DisplayFor(model => model.Bid)</small>
                                </div>

                            </li>

                        </ul>

                        <div class="card p-2">
                            <div class="input-group">
                                <input asp-for="@Model.Bid" onchange="checkBid()" id="Bid" class="form-control" placeholder="Your bit goes here...">

                                <button type="submit" id="butonsubmit" class="btn btn-primary">Bit</button>
                            </div>
                        </div>
                        <span asp-validation-for="@Model.Bid" id="Bid-error" class="text-danger"></span>
                    </div>

                </div>
            </form>


        </div>
</div>

        <script src="/docs/5.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

        <script src="form-validation.js"></script>


</body>

<div class="align-text-bottom">

    <a asp-action="Index">Back to List</a>
</div>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $("#Bid").val("");
    });
    $("#formDetails").submit(function (e) {
        var value = Number(document.getElementById('Bid').value);
        if (value == 0) {
            $("#Bid-error").text("The Bid field is required.");
            e.preventDefault();
            return false;


        }
        else {
            return true;
        }
       
    });
   
    function checkBid() {
        var value = Number(document.getElementById('Bid').value);
        var valuecurrent = Number(document.getElementById('currentbid').innerHTML);
        if (value <= valuecurrent) {
            $("#Bid-error").text("The bid must be bigger than current bid");
            $("#Bid").val("");
        }
      
        else {
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                url: '/Auction/GetInfoWallet',
                data: {},
                success: function (data) {
                   
                    if (data >= value) {
                        $("#Bid-error").text("");
                    }
                    else {
                        $("#Bid-error").text("The bid is higher than what is in you wallet!");
                        $("#Bid").val("");
                    }
                },
                error: function () {
                    $("#Bid-error").text("Error! Please try again later!");
                }
            });
        }
    }
</script>
